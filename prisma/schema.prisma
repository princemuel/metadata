generator client {
  provider = "cargo prisma"
  output   = "../lib/prisma.rs"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id             String   @id @default(uuid())
  email          String   @unique
  name           String?
  date           DateTime @default(now()) @db.Timestamp(6)
  xata_createdat DateTime @default(now()) @db.Timestamptz(6)
  xata_id        String   @unique(map: "User__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_updatedat DateTime @default(now()) @db.Timestamptz(6)
  xata_version   Int      @default(0)
  posts          Post[]
}

model Post {
  id             String   @id @default(uuid())
  title          String
  slug           String   @unique
  content        String?
  published      Boolean  @default(false)
  views          Int      @default(0)
  author_id      String?
  date           DateTime @default(now()) @db.Timestamp(6)
  xata_createdat DateTime @default(now()) @db.Timestamptz(6)
  xata_id        String   @unique(map: "Post__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_updatedat DateTime @default(now()) @db.Timestamptz(6)
  xata_version   Int      @default(0)
  author         User?    @relation(fields: [author_id], references: [id])

  @@index([author_id])
}

model Analytics {
  id             String   @id @default(uuid())
  pathname       String
  referrer       String?
  flag           String?
  country        String?
  city           String?
  latitude       Float?
  longitude      Float?
  created_at     DateTime @default(now()) @db.Timestamp(6)
  name           String
  version        String?
  date           DateTime @default(now()) @db.Timestamp(6)
  xata_createdat DateTime @default(now()) @db.Timestamptz(6)
  xata_id        String   @unique(map: "Analytics__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_updatedat DateTime @default(now()) @db.Timestamptz(6)
  xata_version   Int      @default(0)
}

model Reactions {
  id             String   @id @default(uuid())
  slug           String
  reaction       String
  date           DateTime @default(now()) @db.Timestamp(6)
  xata_createdat DateTime @default(now()) @db.Timestamptz(6)
  xata_id        String   @unique(map: "Reactions__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_updatedat DateTime @default(now()) @db.Timestamptz(6)
  xata_version   Int      @default(0)
}
