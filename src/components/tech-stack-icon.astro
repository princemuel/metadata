---
import { tw } from "@/helpers";
import type { AstroComponentFactory } from "astro/runtime/server/render/astro/index.js";
import type { HTMLAttributes } from "astro/types";
import type { CollectionEntry } from "astro:content";
import { getEntry } from "astro:content";

// type ExtractId<T extends string> = T extends `${infer I}.mdx` ? I : never;

type Props = Prettify<
  Omit<HTMLAttributes<"li">, "id"> & {
    id: LooseAutocomplete<CollectionEntry<"stacks">["slug"]>;
  }
>;

const { class: className, id, ...rest } = Astro.props;

const entry = await getEntry("stacks", strip(id));
const name = entry?.data?.name;

let Icon: AstroComponentFactory | null = null;

try {
  if (entry) {
    const { Content } = await entry.render();
    Icon = Content;
  }
} catch (error) {}

function strip(input: Props["id"]) {
  return ((input ?? "").match(/\b[a-zA-Z]+\b/g) ?? []).join("").toLowerCase();
}
---

<li
  {...rest}
  class:list={tw([
    "inline-flex items-center gap-2 px-2 py-1",
    "rounded border border-white/60 text-xs font-medium",
    "",
    className,
  ])}
>
  {
    Icon && (
      <span class="inline-flex size-4 items-center justify-center">
        <Icon />
      </span>
    )
  }
  <span class="leading-4">
    <slot>{name}</slot>
  </span>
</li>
