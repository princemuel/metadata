---
import { invariant, numberGuard } from "@/helpers";
import type { LocalImageProps, RemoteImageProps } from "astro:assets";
import { Image } from "astro:assets";

type ImageProps = LocalImageProps | RemoteImageProps;

type Props = Prettify<ImageProps & { resize?: "video" | "square" }>;

const { class: className, width, height, resize, ...props } = Astro.props;

invariant(width, "Width is not defined");

type ComputeSize = (
  width: number | `${number}`,
  height?: number | `${number}`,
  aspectRatio?: "video" | "square",
) => [number, number];

const computeSize: ComputeSize = (width, height, aspectRatio) => {
  const [w, h] = [numberGuard(width), numberGuard(height)] as const;
  switch (aspectRatio) {
    case "video":
      return [w, w * (9 / 16)];
    case "square":
      return [w, w];
    default:
      return [w, h];
  }
};

const [w, h] = computeSize(width, height, resize);
---

{/* @ts-expect-error */}
<Image {...props} width={w} height={h} class={className} />
