---
import { Head, Indicator } from "@/components";
import { tw } from "@/helpers";
import { fontMono, fontSans, fontAccent } from "@/lib/fonts";
import { AstroFont as Fonts } from "astro-font";
import { ViewTransitions } from "astro:transitions";
import Header from "./header.astro";

type Props = Meta & { type?: OpenGraph["type"] };

const {
  title,
  image,
  tags,
  type,
  canonical,
  description,
  publishedAt,
  updatedAt,
} = Astro.props;
---

<!doctype html>
<html
  lang="en"
  dir="auto"
  data-dark-reader-mode="dynamic"
  data-dark-reader-theme="dark"
  data-theme="github-dark"
  class={tw("__sans__ __accent__ __mono__")}
>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <script is:inline>
      let t;
      const $r = document.documentElement;
      try {
        t = localStorage.getItem("site-theme");
        if (!t)
          throw new Error(
            `Expected \`theme\` to be of type \`string\` but received type \`${theme}\``,
          );
      } catch (e) {
        const s = window.matchMedia("(prefers-color-scheme: dark)").matches
          ? "dark"
          : "light";
        localStorage.setItem("site-theme", s);
        t = s;
      }
      const r = t || "dark";
      $r.dataset.darkReaderTheme = r;
      $r.dataset.theme = `github-${r}`;
    </script>
    <Head
      title={title}
      description={description}
      image={image}
      og={{ type }}
      tags={tags}
      publishedAt={publishedAt}
      updatedAt={updatedAt}
      canonical={canonical}
    />
    <Fonts config={[fontSans, fontMono, fontAccent]} />
    <ViewTransitions />
    <!-- <script src="/src/scripts/pwa.ts"></script> -->
  </head>
  <!-- dark:bg-[#0e141b] -->
  <body class="bg-white font-sans antialiased dark:bg-neutral-950">
    <Header />
    <slot />
    <Indicator />
    <script>
      const cssHasPseudo = (await import("css-has-pseudo/browser")).default;
      cssHasPseudo(document);
    </script>
  </body>
</html>
