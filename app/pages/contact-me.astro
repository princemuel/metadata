---
import RootLayout from "@/layouts/root.astro";
import Container from "@/components/container.astro";
import { action } from "@/lib/helpers/actions";
import { formSchema } from "@/lib/schema/forms";
import { parseError } from "@/shared/utils";
import { ZodError } from "zod";

export const prerender = false;

const schema = formSchema;

const { response, result } = await action(Astro.request, async (request) => {
  try {
    let data: Record<string, string> = {};
    const formData = await request.formData();

    if (formData.get("honeypot")) throw new Error("Invalid Form Submission");

    const result = schema.parse(Object.fromEntries(formData.entries()));

    data.message = `Thanks ${result.name}. Your message has been sent!`;
    return { data, errors: null, success: true };
  } catch (e) {
    let errors: Record<string, string> = {};
    if (e instanceof ZodError) {
      for (const [key, value] of Object.entries(e.formErrors.fieldErrors)) {
        errors[key] = value?.[0] ?? "";
      }
      return { data: null, errors, success: false };
    }
    errors.unknown = parseError(e);
    return { data: null, errors, success: false };
  }
});

if (response) return response;
---

<RootLayout title="Contact Me" description="Boo">
  <Container>
    <span role="alert" aria-live="polite" data-form-success=""
      >{result?.data?.message}</span
    >
    <form method="POST" data-id="contact-form" class="flex flex-col">
      <input type="hidden" name="honeypot" placeholder="do not fill this" />
      <span role="alert" aria-live="polite" data-form-error="unknown">
        {result?.errors?.unknown}
      </span>
      <div class="flex">
        <label for="fields.name.input">Name</label>
        <input
          type="text"
          id="fields.name.input"
          name="name"
          placeholder="Jane Doe"
          aria-autocomplete="both"
          autocomplete="name"
          aria-errormessage="fields.name.error"
        />
        <span
          role="alert"
          aria-live="polite"
          id="fields.name.error"
          data-form-error="name"
        >
          {result?.errors?.name}
        </span>
      </div>

      <div style={{ display: "flex", flexDirection: "column", gap: "1rem" }}>
        <label for="fields.email.input">Email</label>
        <input
          type="email"
          id="fields.email.input"
          name="email"
          placeholder="email@example.com"
          aria-autocomplete="both"
          autocomplete="email"
          aria-errormessage="fields.email.error"
        />
        <span
          role="alert"
          aria-live="polite"
          id="fields.email.error"
          data-form-error="email"
        >
          {result?.errors?.email}
        </span>
      </div>

      <button
        type="submit"
        style={{ display: "flex", flexDirection: "column", width: "100%" }}
        >Send Message</button
      >
    </form>
  </Container>
</RootLayout>

<script>
  import { handleForm } from "@/lib/helpers/handle-form";
  import { getElement, getElements } from "@/shared/helpers/dom";

  const form = getElement('[data-id="contact-form"]', HTMLFormElement);
  const errors = getElements("[data-form-error]", HTMLSpanElement, form);
  const success = getElement("[data-form-success]", HTMLSpanElement);

  handleForm<Record<string, any>>(form, (result) => {
    errors.forEach((element) => {
      const attr = element.getAttribute("data-form-error") ?? "";
      element.textContent = result?.errors?.[attr] ?? "";
    });

    if (result.status === "success") form.reset();
    success.textContent = result?.data?.message;
  });
</script>
