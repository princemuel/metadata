---
import Link from "@/components/link.astro";
import Prose from "@/components/prose.astro";
import ProjectLayout from "@/layouts/project.astro";
import { envVars } from "@/lib/config/environment";
import type { GetStaticPaths } from "astro";
import { getCollection, getEntry } from "astro:content";

export const getStaticPaths = (async ({ paginate }) => {
  const status = ["draft", "preview", "published"] as const;
  const entries = await getCollection("projects", ({ data }) => {
    return import.meta.env.MODE === "production"
      ? envVars.ENABLE_PREVIEW && data.status !== "draft"
        ? status.includes(data.status)
        : data.status === "published"
      : true;
  });

  return paginate(entries, { pageSize: 1 });
}) satisfies GetStaticPaths;

const { page } = Astro.props;

// biome-ignore lint/style/noNonNullAssertion: not needed here
const entry = page.data.at(0)!;

const [markdown, _author] = await Promise.all([
  entry.render(),
  getEntry(entry.data.author),
]);

const { Content, remarkPluginFrontmatter } = markdown;

// update the collection schema with plugin data
entry.data.updatedAt ||= new Date(remarkPluginFrontmatter.updatedAt);
entry.data.duration ||= remarkPluginFrontmatter.duration;
entry.data.words ||= remarkPluginFrontmatter.words;
---

<ProjectLayout title="" description="" jsonld={{}}>
  <Prose>
    <h1 id="heading">{entry.data.title}</h1>
    <Content />
  </Prose>

  <div class="flex items-center gap-4">
    {page.url.prev ? <Link href={page.url.prev}>Previous</Link> : null}
    {page.url.next ? <Link href={page.url.next}>Next</Link> : null}
  </div>
</ProjectLayout>
