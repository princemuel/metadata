---
import { published_date } from "@/lib/config/site";
import { date_nf } from "@/shared/helpers/datetime";
import { Icon } from "astro-icon/components";
import type { HTMLAttributes } from "astro/types";
import { getCollection } from "astro:content";
import Container from "./container.astro";
import Link from "./link.astro";
import NewsletterForm from "./newsletter-form.astro";
import Time from "./time.astro";

const datetime = published_date;
const buildDate = new Date(Date.now());

type Props = HTMLAttributes<"footer">;

const { class: className, ...rest } = Astro.props;

const excluded = ["discord", "youtube"];

const social = await getCollection(
  "social",
  ({ id }) => !excluded.includes(id),
);

const routes = {
  general: [
    { href: "/", text: "Home" },
    { href: "/about-me", text: "About Me" },
    { href: "/blog", text: "Blog" },
    { href: "/projects", text: "Projects" },
    { href: "/dashboard", text: "Dashboard" },
  ],
  specifics: [
    { href: "/tags", text: "Tags" },
    { href: "/resume.pdf", text: "Resume" },
    { href: "/newsletter", text: "Newsletter" },
    { href: "/privacy-policy", text: "Privacy Policy" },
    { href: "/terms-of-service", text: "Terms of Service" },
  ],
  extras: [
    { href: "/resources", text: "Setup" },
    { href: "/tweets", text: "Tweets" },
    { href: "/sponsor-me", text: "Sponsor Me" },
    { href: "/hire-me", text: "Hire Me" },
    { href: "/contact-me", text: "Contact Me" },
  ],
};

const footer_date = date_nf("en-US", {
  month: "long",
  day: "numeric",
  hour: "numeric",
  minute: "numeric",
});
---

<footer {...rest} class:list={["pt-16", className]}>
  <Container>
    <nav
      aria-label="Footer"
      class="grid grid-cols-3 gap-x-4 gap-y-12 border-t border-slate-300 py-10 md:grid-cols-6 dark:border-slate-900"
    >
      <section class="col-span-1">
        <h4
          class="text-sm uppercase text-slate-900 sm:text-base dark:text-slate-200"
        >
          General
        </h4>
        <ul
          class="mt-4 space-y-3 text-xs text-slate-600 sm:text-sm dark:text-slate-400"
        >
          {
            routes.general.map((route) => (
              <li>
                <Link href={route.href} class="text-inherit">
                  {route.text}
                </Link>
              </li>
            ))
          }
        </ul>
      </section>

      <section class="col-span-1">
        <h4
          class="text-sm uppercase text-slate-900 sm:text-base dark:text-slate-200"
        >
          Specifics
        </h4>
        <ul
          class="mt-4 space-y-3 text-xs text-slate-600 sm:text-sm dark:text-slate-400"
        >
          {
            routes.specifics.map((route) => (
              <li>
                <Link href={route.href} class="text-inherit">
                  {route.text}
                </Link>
              </li>
            ))
          }
        </ul>
      </section>

      <section class="col-span-1">
        <h4
          class="text-sm uppercase text-slate-900 sm:text-base dark:text-slate-200"
        >
          Extra
        </h4>
        <ul
          class="mt-4 space-y-3 text-xs text-slate-600 sm:text-sm dark:text-slate-400"
        >
          {
            routes.extras.map((route) => (
              <li>
                <Link href={route.href} class="text-inherit">
                  {route.text}
                </Link>
              </li>
            ))
          }
        </ul>
      </section>

      <section class="col-span-3">
        <NewsletterForm />
      </section>
    </nav>

    <div
      class="flex flex-col items-center justify-between gap-4 py-16 md:flex-row"
    >
      <div class="order-1 flex items-center gap-4 text-2xl md:order-2">
        {
          social
            .sort((a, b) => a.data.order - b.data.order)
            .map((link) => (
              <Link
                href={link.data.href}
                class:list={[
                  "group flex items-center transition",
                  "text-slate-800 hocus:text-purple-500",
                  "dark:text-slate-400 dark:hocus:text-purple-500",
                ]}
              >
                <Icon name={link.data.icon} class="" />
                <span class="sr-only">{link.data.text}</span>
              </Link>
            ))
        }
      </div>

      <p
        class="order-2 text-base text-slate-800 md:order-1 dark:text-slate-400"
      >
        &copy;<Time datetime={datetime}>{datetime.getFullYear()}</Time>
        <span>Prince Muel. All Rights Reserved</span>
      </p>
    </div>
  </Container>

  <div class="bg-slate-200 dark:bg-slate-900">
    <Container class="flex items-center justify-center py-1">
      <p
        class="flex flex-wrap content-center items-center gap-1 text-xs text-gray-800 dark:text-white"
      >
        <span>Built with </span>
        <Icon name="logos:astro-icon" />
        <Link href="https://docs.astro.build/en/concepts/why-astro/"
          >{Astro.generator}</Link
        > on
        <Time datetime={buildDate.toISOString()}
          >{footer_date.format(buildDate)}</Time
        >
      </p>
    </Container>
  </div>
</footer>
