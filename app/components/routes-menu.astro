---
import { tw } from "@/shared/utils";
import { Icon } from "astro-icon/components";
import type { HTMLAttributes } from "astro/types";
import { getCollection } from "astro:content";
import Navlink from "./navlink.astro";

type Props = HTMLAttributes<"menu">;

const response = await getCollection("routes");

// "about" | "articles" | "blog" | "dashboard" | "home" | "projects" | "resources"
const excludedRoutes = ["resources", "articles", "blog"];

const routes =
  response
    .filter((route) => !excludedRoutes.includes(route.id))
    .sort((a, b) => a.data.order - b.data.order) ?? [];
---

<menu
  {...Astro.props}
  role="menu"
  aria-orientation="horizontal"
  class={tw([
    "flex rounded-pill px-3",
    "text-sm font-medium text-stone-800 dark:text-neutral-50",
    "bg-white/5 ring-1 ring-stone-900/5 dark:ring-white/10",
    "shadow-lg shadow-stone-800/5 backdrop-blur-xl",
  ])}
>
  {
    routes.map((route) => (
      <li role="presentation" class="capitalize">
        <Navlink
          role="menuitem"
          class="group relative flex px-3 py-2 transition aria-[current=page]:text-purple-600 hocus:text-purple-600 dark:aria-[current=page]:text-purple-500 dark:hocus:text-purple-500"
          href={route.data.href}
        >
          <Icon
            name={route.data.icon}
            class="text-lg text-inherit sm:text-xl md:hidden"
          />
          <span class="sr-only text-inherit md:not-sr-only">
            {route.data.text}
          </span>
          <span class="absolute inset-x-1 -bottom-px hidden h-px bg-gradient-to-r from-purple-600/0 via-purple-600/40 to-purple-600/0 group-aria-[current=page]:inline dark:from-purple-500/0 dark:via-purple-500/40 dark:to-purple-500/0" />
        </Navlink>
      </li>
    ))
  }
</menu>
