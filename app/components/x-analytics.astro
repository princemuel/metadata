---
type Props = {
  framework?: string;
  name?: string;
  version?: string;
  pathname?: string | URL;
};

const {
  name = "x-analytics",
  version = "0.1",
  framework = "astro",
  pathname = Astro.url.pathname,
} = Astro.props;
---

<x-analytics
  data-sdkn={name + (framework ? `/${framework}` : "")}
  data-sdkv={version}
  data-pathname={pathname}
  data-prod={`${import.meta.env.PROD}`}></x-analytics>

<script>
  import { withBaseUrl } from "@/shared/helpers/with-base-url";

  if (!customElements.get("x-analytics")) {
    customElements.define(
      "x-analytics",
      class XAnalytics extends HTMLElement {
        constructor() {
          super();
          (() => {
            if (this.dataset.prod == "false") return;
            const payload = JSON.stringify({
              name: this.dataset.skdn,
              version: this.dataset.sdkv,
              pathname: this.dataset.pathname,
              referrer: document.referrer,
            });
            const blob = new Blob([payload], { type: "application/json" });
            const url = withBaseUrl("/api/analytics");
            navigator.sendBeacon(url, blob);
          })();
        }
      },
    );
  }
</script>
